# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `discordrb-webhooks` gem.
# Please instead update this file by running `bin/tapioca gem discordrb-webhooks`.

# Webhook client
module Discordrb::Webhooks; end

# An embed is a multipart-style attachment to a webhook message that can have a variety of different purposes and
# appearances.
class Discordrb::Webhooks::Embed
  # @return [Embed] a new instance of Embed
  #
  # source://discordrb-webhooks//lib/discordrb/webhooks/embeds.rb#7
  def initialize(title: T.unsafe(nil), description: T.unsafe(nil), url: T.unsafe(nil), timestamp: T.unsafe(nil), colour: T.unsafe(nil), color: T.unsafe(nil), footer: T.unsafe(nil), image: T.unsafe(nil), thumbnail: T.unsafe(nil), video: T.unsafe(nil), provider: T.unsafe(nil), author: T.unsafe(nil), fields: T.unsafe(nil)); end

  # Add a field object to this embed.
  #
  # @param field [EmbedField] The field to add.
  #
  # source://discordrb-webhooks//lib/discordrb/webhooks/embeds.rb#85
  def <<(field); end

  # Convenience method to add a field to the embed without having to create one manually.
  #
  # @example Add a field to an embed, conveniently
  #   embed.add_field(name: 'A field', value: "The field's content")
  # @param name [String] The field's name
  # @param value [String] The field's value
  # @param inline [true, false] Whether the field should be inlined
  # @see EmbedField
  #
  # source://discordrb-webhooks//lib/discordrb/webhooks/embeds.rb#96
  def add_field(name: T.unsafe(nil), value: T.unsafe(nil), inline: T.unsafe(nil)); end

  # @example Add a author to an embed
  #   embed.author = Discordrb::Webhooks::EmbedAuthor.new(name: 'meew0', url: 'https://github.com/meew0', icon_url: 'https://avatars2.githubusercontent.com/u/3662915?v=3&s=466')
  # @return [EmbedAuthor, nil] author for this embed
  # @see EmbedAuthor
  #
  # source://discordrb-webhooks//lib/discordrb/webhooks/embeds.rb#81
  def author; end

  # @example Add a author to an embed
  #   embed.author = Discordrb::Webhooks::EmbedAuthor.new(name: 'meew0', url: 'https://github.com/meew0', icon_url: 'https://avatars2.githubusercontent.com/u/3662915?v=3&s=466')
  # @return [EmbedAuthor, nil] author for this embed
  # @see EmbedAuthor
  #
  # source://discordrb-webhooks//lib/discordrb/webhooks/embeds.rb#81
  def author=(_arg0); end

  # @return [Integer, nil] the colour of the bar to the side, in decimal form
  #
  # source://discordrb-webhooks//lib/discordrb/webhooks/embeds.rb#36
  def color; end

  # Sets the colour of the bar to the side of the embed to something new.
  #
  # @param value [Integer, String, {Integer, Integer, Integer}, #to_i, nil] The colour in decimal, hexadecimal, R/G/B decimal, or nil to clear the embeds colour
  #   form.
  #
  # source://discordrb-webhooks//lib/discordrb/webhooks/embeds.rb#42
  def color=(value); end

  # @return [Integer, nil] the colour of the bar to the side, in decimal form
  #
  # source://discordrb-webhooks//lib/discordrb/webhooks/embeds.rb#36
  def colour; end

  # Sets the colour of the bar to the side of the embed to something new.
  #
  # @param value [Integer, String, {Integer, Integer, Integer}, #to_i, nil] The colour in decimal, hexadecimal, R/G/B decimal, or nil to clear the embeds colour
  #   form.
  #
  # source://discordrb-webhooks//lib/discordrb/webhooks/embeds.rb#42
  def colour=(value); end

  # @return [String, nil] description for this embed
  #
  # source://discordrb-webhooks//lib/discordrb/webhooks/embeds.rb#27
  def description; end

  # @return [String, nil] description for this embed
  #
  # source://discordrb-webhooks//lib/discordrb/webhooks/embeds.rb#27
  def description=(_arg0); end

  # @return [Array<EmbedField>] the fields attached to this embed.
  #
  # source://discordrb-webhooks//lib/discordrb/webhooks/embeds.rb#101
  def fields; end

  # @return [Array<EmbedField>] the fields attached to this embed.
  #
  # source://discordrb-webhooks//lib/discordrb/webhooks/embeds.rb#101
  def fields=(_arg0); end

  # @example Add a footer to an embed
  #   embed.footer = Discordrb::Webhooks::EmbedFooter.new(text: 'Hello', icon_url: 'https://i.imgur.com/j69wMDu.jpg')
  # @return [EmbedFooter, nil] footer for this embed
  #
  # source://discordrb-webhooks//lib/discordrb/webhooks/embeds.rb#63
  def footer; end

  # @example Add a footer to an embed
  #   embed.footer = Discordrb::Webhooks::EmbedFooter.new(text: 'Hello', icon_url: 'https://i.imgur.com/j69wMDu.jpg')
  # @return [EmbedFooter, nil] footer for this embed
  #
  # source://discordrb-webhooks//lib/discordrb/webhooks/embeds.rb#63
  def footer=(_arg0); end

  # @example Add a image to an embed
  #   embed.image = Discordrb::Webhooks::EmbedImage.new(url: 'https://i.imgur.com/PcMltU7.jpg')
  # @return [EmbedImage, nil] image for this embed
  # @see EmbedImage
  #
  # source://discordrb-webhooks//lib/discordrb/webhooks/embeds.rb#69
  def image; end

  # @example Add a image to an embed
  #   embed.image = Discordrb::Webhooks::EmbedImage.new(url: 'https://i.imgur.com/PcMltU7.jpg')
  # @return [EmbedImage, nil] image for this embed
  # @see EmbedImage
  #
  # source://discordrb-webhooks//lib/discordrb/webhooks/embeds.rb#69
  def image=(_arg0); end

  # @example Add a thumbnail to an embed
  #   embed.thumbnail = Discordrb::Webhooks::EmbedThumbnail.new(url: 'https://i.imgur.com/xTG3a1I.jpg')
  # @return [EmbedThumbnail, nil] thumbnail for this embed
  # @see EmbedThumbnail
  #
  # source://discordrb-webhooks//lib/discordrb/webhooks/embeds.rb#75
  def thumbnail; end

  # @example Add a thumbnail to an embed
  #   embed.thumbnail = Discordrb::Webhooks::EmbedThumbnail.new(url: 'https://i.imgur.com/xTG3a1I.jpg')
  # @return [EmbedThumbnail, nil] thumbnail for this embed
  # @see EmbedThumbnail
  #
  # source://discordrb-webhooks//lib/discordrb/webhooks/embeds.rb#75
  def thumbnail=(_arg0); end

  # @return [Time, nil] timestamp for this embed. Will be displayed just below the title.
  #
  # source://discordrb-webhooks//lib/discordrb/webhooks/embeds.rb#33
  def timestamp; end

  # @return [Time, nil] timestamp for this embed. Will be displayed just below the title.
  #
  # source://discordrb-webhooks//lib/discordrb/webhooks/embeds.rb#33
  def timestamp=(_arg0); end

  # @return [String, nil] title of the embed that will be displayed above everything else.
  #
  # source://discordrb-webhooks//lib/discordrb/webhooks/embeds.rb#24
  def title; end

  # @return [String, nil] title of the embed that will be displayed above everything else.
  #
  # source://discordrb-webhooks//lib/discordrb/webhooks/embeds.rb#24
  def title=(_arg0); end

  # @return [Hash] a hash representation of this embed, to be converted to JSON.
  #
  # source://discordrb-webhooks//lib/discordrb/webhooks/embeds.rb#104
  def to_hash; end

  # @return [String, nil] URL the title should point to
  #
  # source://discordrb-webhooks//lib/discordrb/webhooks/embeds.rb#30
  def url; end

  # @return [String, nil] URL the title should point to
  #
  # source://discordrb-webhooks//lib/discordrb/webhooks/embeds.rb#30
  def url=(_arg0); end
end

# An embed's author will be shown at the top to indicate who "authored" the particular event the webhook was sent for.
class Discordrb::Webhooks::EmbedAuthor
  # Creates a new author object.
  #
  # @param name [String, nil] The name of the author.
  # @param url [String, nil] The URL the name should link to.
  # @param icon_url [String, nil] The URL of the icon to be displayed next to the author.
  # @return [EmbedAuthor] a new instance of EmbedAuthor
  #
  # source://discordrb-webhooks//lib/discordrb/webhooks/embeds.rb#202
  def initialize(name: T.unsafe(nil), url: T.unsafe(nil), icon_url: T.unsafe(nil)); end

  # @return [String, nil] URL of the icon to be displayed next to the author
  #
  # source://discordrb-webhooks//lib/discordrb/webhooks/embeds.rb#196
  def icon_url; end

  # @return [String, nil] URL of the icon to be displayed next to the author
  #
  # source://discordrb-webhooks//lib/discordrb/webhooks/embeds.rb#196
  def icon_url=(_arg0); end

  # @return [String, nil] name of the author
  #
  # source://discordrb-webhooks//lib/discordrb/webhooks/embeds.rb#190
  def name; end

  # @return [String, nil] name of the author
  #
  # source://discordrb-webhooks//lib/discordrb/webhooks/embeds.rb#190
  def name=(_arg0); end

  # @return [Hash] a hash representation of this embed author, to be converted to JSON.
  #
  # source://discordrb-webhooks//lib/discordrb/webhooks/embeds.rb#209
  def to_hash; end

  # @return [String, nil] URL the name should link to
  #
  # source://discordrb-webhooks//lib/discordrb/webhooks/embeds.rb#193
  def url; end

  # @return [String, nil] URL the name should link to
  #
  # source://discordrb-webhooks//lib/discordrb/webhooks/embeds.rb#193
  def url=(_arg0); end
end

# A field is a small block of text with a header that can be relatively freely layouted with other fields.
class Discordrb::Webhooks::EmbedField
  # Creates a new field object.
  #
  # @param name [String, nil] The name of the field, displayed in bold at the top of the field.
  # @param value [String, nil] The value of the field, displayed in normal text below the name.
  # @param inline [true, false] Whether the field should be displayed inline with other fields.
  # @return [EmbedField] a new instance of EmbedField
  #
  # source://discordrb-webhooks//lib/discordrb/webhooks/embeds.rb#233
  def initialize(name: T.unsafe(nil), value: T.unsafe(nil), inline: T.unsafe(nil)); end

  # @return [true, false] whether the field should be displayed inline with other fields.
  #
  # source://discordrb-webhooks//lib/discordrb/webhooks/embeds.rb#227
  def inline; end

  # @return [true, false] whether the field should be displayed inline with other fields.
  #
  # source://discordrb-webhooks//lib/discordrb/webhooks/embeds.rb#227
  def inline=(_arg0); end

  # @return [String, nil] name of the field, displayed in bold at the top of the field.
  #
  # source://discordrb-webhooks//lib/discordrb/webhooks/embeds.rb#221
  def name; end

  # @return [String, nil] name of the field, displayed in bold at the top of the field.
  #
  # source://discordrb-webhooks//lib/discordrb/webhooks/embeds.rb#221
  def name=(_arg0); end

  # @return [Hash] a hash representation of this embed field, to be converted to JSON.
  #
  # source://discordrb-webhooks//lib/discordrb/webhooks/embeds.rb#240
  def to_hash; end

  # @return [String, nil] value of the field, displayed in normal text below the name.
  #
  # source://discordrb-webhooks//lib/discordrb/webhooks/embeds.rb#224
  def value; end

  # @return [String, nil] value of the field, displayed in normal text below the name.
  #
  # source://discordrb-webhooks//lib/discordrb/webhooks/embeds.rb#224
  def value=(_arg0); end
end

# An embed's footer will be displayed at the very bottom of an embed, together with the timestamp. An icon URL can be
# set together with some text to be displayed.
class Discordrb::Webhooks::EmbedFooter
  # Creates a new footer object.
  #
  # @param text [String, nil] The text to be displayed in the footer.
  # @param icon_url [String, nil] The URL to an icon to be showed alongside the text.
  # @return [EmbedFooter] a new instance of EmbedFooter
  #
  # source://discordrb-webhooks//lib/discordrb/webhooks/embeds.rb#134
  def initialize(text: T.unsafe(nil), icon_url: T.unsafe(nil)); end

  # @return [String, nil] URL to an icon to be showed alongside the text
  #
  # source://discordrb-webhooks//lib/discordrb/webhooks/embeds.rb#129
  def icon_url; end

  # @return [String, nil] URL to an icon to be showed alongside the text
  #
  # source://discordrb-webhooks//lib/discordrb/webhooks/embeds.rb#129
  def icon_url=(_arg0); end

  # @return [String, nil] text to be displayed in the footer
  #
  # source://discordrb-webhooks//lib/discordrb/webhooks/embeds.rb#126
  def text; end

  # @return [String, nil] text to be displayed in the footer
  #
  # source://discordrb-webhooks//lib/discordrb/webhooks/embeds.rb#126
  def text=(_arg0); end

  # @return [Hash] a hash representation of this embed footer, to be converted to JSON.
  #
  # source://discordrb-webhooks//lib/discordrb/webhooks/embeds.rb#140
  def to_hash; end
end

# An embed's image will be displayed at the bottom, in large format. It will replace a footer icon URL if one is set.
class Discordrb::Webhooks::EmbedImage
  # Creates a new image object.
  #
  # @param url [String, nil] The URL of the image.
  # @return [EmbedImage] a new instance of EmbedImage
  #
  # source://discordrb-webhooks//lib/discordrb/webhooks/embeds.rb#155
  def initialize(url: T.unsafe(nil)); end

  # @return [Hash] a hash representation of this embed image, to be converted to JSON.
  #
  # source://discordrb-webhooks//lib/discordrb/webhooks/embeds.rb#160
  def to_hash; end

  # @return [String, nil] URL of the image
  #
  # source://discordrb-webhooks//lib/discordrb/webhooks/embeds.rb#151
  def url; end

  # @return [String, nil] URL of the image
  #
  # source://discordrb-webhooks//lib/discordrb/webhooks/embeds.rb#151
  def url=(_arg0); end
end

# An embed's thumbnail will be displayed at the right of the message, next to the description and fields. When clicked
# it will point to the embed URL.
class Discordrb::Webhooks::EmbedThumbnail
  # Creates a new thumbnail object.
  #
  # @param url [String, nil] The URL of the thumbnail.
  # @return [EmbedThumbnail] a new instance of EmbedThumbnail
  #
  # source://discordrb-webhooks//lib/discordrb/webhooks/embeds.rb#175
  def initialize(url: T.unsafe(nil)); end

  # @return [Hash] a hash representation of this embed thumbnail, to be converted to JSON.
  #
  # source://discordrb-webhooks//lib/discordrb/webhooks/embeds.rb#180
  def to_hash; end

  # @return [String, nil] URL of the thumbnail
  #
  # source://discordrb-webhooks//lib/discordrb/webhooks/embeds.rb#171
  def url; end

  # @return [String, nil] URL of the thumbnail
  #
  # source://discordrb-webhooks//lib/discordrb/webhooks/embeds.rb#171
  def url=(_arg0); end
end
